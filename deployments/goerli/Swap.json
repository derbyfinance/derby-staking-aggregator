{
  "address": "0x959E2B4eB3fe2607Ee266012571d9c0638713FAB",
  "abi": [],
  "transactionHash": "0x1775ec04514fd89e83ec654fec4f850e469558cacb001f27b03dc7064c8924f6",
  "receipt": {
    "to": null,
    "from": "0x1Ca7b496Ac4E609cf400793Db67916AC91773927",
    "contractAddress": "0x959E2B4eB3fe2607Ee266012571d9c0638713FAB",
    "transactionIndex": 96,
    "gasUsed": "673767",
    "logsBloom": "0x
    "blockHash": "0x2ac5e08367f1ccb4cdc835cc31a7d348b5b3454a0cf32436f31c5cdbd513b6ee",
    "transactionHash": "0x1775ec04514fd89e83ec654fec4f850e469558cacb001f27b03dc7064c8924f6",
    "logs": [],
    "blockNumber": 10205453,
    "cumulativeGasUsed": "20630480",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a24cf29ed22a8f8e371f4809fa41a898",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"amountOutMultiSwap(Swap.SwapInOut,address,uint24)\":{\"params\":{\"_poolFee\":\"Current uniswap pool fee set in router e.g 3000\",\"_swap\":\"Number of tokens to sell, token to sell, token to receive\",\"_uniswapQuoter\":\"Address of uniswapQuoter\"},\"returns\":{\"_0\":\"amountOutMin minimum amount out of tokens to receive when executing swap\"}},\"swapTokensMulti(Swap.SwapInOut,IController.UniswapParams,bool)\":{\"params\":{\"_swap\":\"Number of tokens to sell, token to sell, token to receive\",\"_uniswap\":\"Address of uniswapRouter, uniswapQuoter and poolfee\"},\"returns\":{\"_0\":\"Amountout Number of tokens received\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"amountOutMultiSwap(Swap.SwapInOut,address,uint24)\":{\"notice\":\"Swap tokens on Uniswap Multi route\"},\"swapTokensMulti(Swap.SwapInOut,IController.UniswapParams,bool)\":{\"notice\":\"Swap tokens on Uniswap\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Swap.sol\":\"Swap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"contracts/Interfaces/ExternalInterfaces/IQuoter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\n/// @title Quoter Interface\\r\\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps\\r\\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\\r\\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\\r\\ninterface IQuoter {\\r\\n  /// @notice Returns the amount out received for a given exact input swap without executing the swap\\r\\n  /// @param path The path of the swap, i.e. each token pair and the pool fee\\r\\n  /// @param amountIn The amount of the first token to swap\\r\\n  /// @return amountOut The amount of the last token that would be received\\r\\n  function quoteExactInput(bytes memory path, uint256 amountIn)\\r\\n    external\\r\\n    returns (uint256 amountOut);\\r\\n\\r\\n  /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\\r\\n  /// @param tokenIn The token being swapped in\\r\\n  /// @param tokenOut The token being swapped out\\r\\n  /// @param fee The fee of the token pool to consider for the pair\\r\\n  /// @param amountIn The desired input amount\\r\\n  /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\\r\\n  /// @return amountOut The amount of `tokenOut` that would be received\\r\\n  function quoteExactInputSingle(\\r\\n    address tokenIn,\\r\\n    address tokenOut,\\r\\n    uint24 fee,\\r\\n    uint256 amountIn,\\r\\n    uint160 sqrtPriceLimitX96\\r\\n  ) external returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x3a459293365e4b7d5dddb38eda3c68d742ee035c133b2ef0c4e3b3e52d3a469a\",\"license\":\"MIT\"},\"contracts/Interfaces/ExternalInterfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\ninterface ISwapRouter {\\r\\n  struct ExactInputSingleParams {\\r\\n    address tokenIn;\\r\\n    address tokenOut;\\r\\n    uint24 fee;\\r\\n    address recipient;\\r\\n    uint256 deadline;\\r\\n    uint256 amountIn;\\r\\n    uint256 amountOutMinimum;\\r\\n    uint160 sqrtPriceLimitX96;\\r\\n  }\\r\\n\\r\\n  /// @notice Swaps `amountIn` of one token for as much as possible of another token\\r\\n  /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\r\\n  /// @return amountOut The amount of the received token\\r\\n  function exactInputSingle(ISwapRouter.ExactInputSingleParams memory params)\\r\\n    external\\r\\n    returns (uint256 amountOut);\\r\\n\\r\\n  struct ExactInputParams {\\r\\n    bytes path;\\r\\n    address recipient;\\r\\n    uint256 deadline;\\r\\n    uint256 amountIn;\\r\\n    uint256 amountOutMinimum;\\r\\n  }\\r\\n\\r\\n  /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\r\\n  /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\r\\n  /// @return amountOut The amount of the received token\\r\\n  function exactInput(ExactInputParams calldata params)\\r\\n    external\\r\\n    payable\\r\\n    returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x22353db7855673a12308ba8fcffadd2b21cd900d5ce58b749bf878e8c905ff22\",\"license\":\"MIT\"},\"contracts/Interfaces/ExternalInterfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\n/// @title Interface for WETH9\\r\\ninterface IWETH9 is IERC20 {\\r\\n  /// @notice Deposit ether to get wrapped ether\\r\\n  function deposit() external payable;\\r\\n\\r\\n  /// @notice Withdraw wrapped ether to get ether\\r\\n  function withdraw(uint256) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xf4b5008d0c423bd867b814efe0bc6c41368ba93dcaea832a62984a649c40c6a8\",\"license\":\"MIT\"},\"contracts/Interfaces/IController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Derby Finance - 2022\\npragma solidity ^0.8.11;\\n\\ninterface IController {\\n  struct ProtocolInfoS {\\n    address LPToken;\\n    address provider;\\n    address underlying;\\n  }\\n\\n  struct UniswapParams {\\n    address router;\\n    address quoter;\\n    uint24 poolFee;\\n  }\\n\\n  function claim(uint256 _ETFnumber, uint256 protocolNumber) external returns (bool);\\n\\n  function addProtocol(\\n    string calldata name,\\n    uint256 _ETFnumber,\\n    address provider,\\n    address protocolLPToken,\\n    address underlying,\\n    address govToken\\n  ) external returns (uint256);\\n\\n  function getProtocolInfo(\\n    uint256 _ETFnumber,\\n    uint256 protocolNumber\\n  ) external view returns (ProtocolInfoS memory);\\n\\n  function getUniswapParams() external view returns (UniswapParams memory);\\n\\n  function latestProtocolId(uint256 _ETFnumber) external view returns (uint256);\\n\\n  function setVaultWhitelistStatus(address _vault, bool _status) external;\\n\\n  function setUniswapRouter(address _uniswapRouter) external;\\n\\n  function setUniswapQuoter(address _uniswapQuoter) external;\\n\\n  function setUniswapPoolFee(uint24 _poolFee) external;\\n\\n  function getUniswapPoolFee() external view returns (uint24);\\n\\n  function getUniswapQuoter() external view returns (address);\\n\\n  function getProtocolBlacklist(\\n    uint256 _ETFnumber,\\n    uint256 _protocolNum\\n  ) external view returns (bool);\\n\\n  function setProtocolBlacklist(uint256 _ETFnumber, uint256 _protocolNum) external;\\n\\n  function getGovToken(uint256 _vaultNumber, uint256 _protocolNum) external view returns (address);\\n\\n  function getDao() external view returns (address);\\n}\\n\",\"keccak256\":\"0x25c788da89b1d3ee6d795545b5fb8838d7bfe5d555ee0b93266038088ce37b45\",\"license\":\"MIT\"},\"contracts/libraries/Swap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Derby Finance - 2022\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\n\\r\\nimport \\\"../Interfaces/IController.sol\\\";\\r\\n\\r\\nimport \\\"../Interfaces/ExternalInterfaces/ISwapRouter.sol\\\";\\r\\nimport \\\"../Interfaces/ExternalInterfaces/IWETH.sol\\\";\\r\\nimport \\\"../Interfaces/ExternalInterfaces/IQuoter.sol\\\";\\r\\n\\r\\nlibrary Swap {\\r\\n  using SafeERC20 for IERC20;\\r\\n\\r\\n  struct SwapInOut {\\r\\n    uint256 amount;\\r\\n    uint256 deadline;\\r\\n    uint256 amountOutMin;\\r\\n    address nativeToken;\\r\\n    address tokenIn;\\r\\n    address tokenOut;\\r\\n  }\\r\\n\\r\\n  /// @notice Swap tokens on Uniswap\\r\\n  /// @param _swap Number of tokens to sell, token to sell, token to receive\\r\\n  /// @param _uniswap Address of uniswapRouter, uniswapQuoter and poolfee\\r\\n  /// @return Amountout Number of tokens received\\r\\n  function swapTokensMulti(\\r\\n    SwapInOut memory _swap,\\r\\n    IController.UniswapParams memory _uniswap,\\r\\n    bool _rewardSwap\\r\\n  ) public returns (uint256) {\\r\\n    IERC20(_swap.tokenIn).safeIncreaseAllowance(_uniswap.router, _swap.amount);\\r\\n\\r\\n    uint256 amountOutMinimum = IQuoter(_uniswap.quoter).quoteExactInput(\\r\\n      abi.encodePacked(\\r\\n        _swap.tokenIn,\\r\\n        _uniswap.poolFee,\\r\\n        _swap.nativeToken,\\r\\n        _uniswap.poolFee,\\r\\n        _swap.tokenOut\\r\\n      ),\\r\\n      _swap.amount\\r\\n    );\\r\\n\\r\\n    uint256 balanceBefore = IERC20(_swap.tokenOut).balanceOf(address(this));\\r\\n    if (_rewardSwap && balanceBefore >= amountOutMinimum && amountOutMinimum >= _swap.amountOutMin)\\r\\n      return amountOutMinimum;\\r\\n\\r\\n    ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\\r\\n      path: abi.encodePacked(\\r\\n        _swap.tokenIn,\\r\\n        _uniswap.poolFee,\\r\\n        _swap.nativeToken,\\r\\n        _uniswap.poolFee,\\r\\n        _swap.tokenOut\\r\\n      ),\\r\\n      recipient: address(this),\\r\\n      deadline: _swap.deadline,\\r\\n      amountIn: _swap.amount,\\r\\n      amountOutMinimum: _swap.amountOutMin\\r\\n    });\\r\\n\\r\\n    ISwapRouter(_uniswap.router).exactInput(params);\\r\\n    uint256 balanceAfter = IERC20(_swap.tokenOut).balanceOf(address(this));\\r\\n    require(balanceAfter - balanceBefore >= _swap.amountOutMin, \\\"Over/underflow\\\");\\r\\n\\r\\n    return balanceAfter - balanceBefore;\\r\\n  }\\r\\n\\r\\n  /// @notice Swap tokens on Uniswap Multi route\\r\\n  /// @param _swap Number of tokens to sell, token to sell, token to receive\\r\\n  /// @param _uniswapQuoter Address of uniswapQuoter\\r\\n  /// @param _poolFee Current uniswap pool fee set in router e.g 3000\\r\\n  /// @return amountOutMin minimum amount out of tokens to receive when executing swap\\r\\n  function amountOutMultiSwap(\\r\\n    SwapInOut memory _swap,\\r\\n    address _uniswapQuoter,\\r\\n    uint24 _poolFee\\r\\n  ) public returns (uint256) {\\r\\n    return\\r\\n      IQuoter(_uniswapQuoter).quoteExactInput(\\r\\n        abi.encodePacked(_swap.tokenIn, _poolFee, _swap.nativeToken, _poolFee, _swap.tokenOut),\\r\\n        _swap.amount\\r\\n      );\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x1359a63bdc3971b9304b5350a1afa04c33558a8fab9c446347b311e1087207a0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x610b3861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80634e424de21461004557806353d7d4cd14610077575b600080fd5b81801561005157600080fd5b50610065610060366004610819565b610097565b60405190815260200160405180910390f35b81801561008357600080fd5b5061006561009236600461086f565b61014a565b6000826001600160a01b031663cdca17538560800151848760600151868960a001516040516020016100cd959493929190610925565b60408051601f198184030181529082905287516001600160e01b031960e085901b1683526100fd926004016109ca565b6020604051808303816000875af115801561011c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014091906109ec565b90505b9392505050565b81518351608085015160009261016b926001600160a01b0390921691610489565b600083602001516001600160a01b031663cdca175386608001518660400151886060015188604001518a60a001516040516020016101ad959493929190610925565b60408051601f198184030181529082905288516001600160e01b031960e085901b1683526101dd926004016109ca565b6020604051808303816000875af11580156101fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022091906109ec565b905060008560a001516001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016102549190610a05565b602060405180830381865afa158015610271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029591906109ec565b90508380156102a45750818110155b80156102b4575085604001518210155b156102c157509050610143565b6040805160a0808201835260808901519288015160608a0151918a015160009484936102f4939192829060c08701610925565b6040516020818303038152906040528152602001306001600160a01b0316815260200188602001518152602001886000015181526020018860400151815250905085600001516001600160a01b031663c04b8d59826040518263ffffffff1660e01b81526004016103659190610a19565b6020604051808303816000875af1158015610384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a891906109ec565b5060a08701516040516370a0823160e01b81526000916001600160a01b0316906370a08231906103dc903090600401610a05565b602060405180830381865afa1580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d91906109ec565b604089015190915061042f8483610a87565b10156104735760405162461bcd60e51b815260206004820152600e60248201526d4f7665722f756e646572666c6f7760901b60448201526064015b60405180910390fd5b61047d8382610a87565b98975050505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe91906109ec565b6105089190610a9e565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905290915061055d908590610563565b50505050565b60006105b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661063a9092919063ffffffff16565b80519091501561063557808060200190518101906105d69190610ab6565b6106355760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161046a565b505050565b60606101408484600085856001600160a01b0385163b61069c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161046a565b600080866001600160a01b031685876040516106b89190610ad3565b60006040518083038185875af1925050503d80600081146106f5576040519150601f19603f3d011682016040523d82523d6000602084013e6106fa565b606091505b509150915061070a828286610715565b979650505050505050565b60608315610724575081610143565b8251156107345782518084602001fd5b8160405162461bcd60e51b815260040161046a9190610aef565b80356001600160a01b038116811461076557600080fd5b919050565b600060c0828403121561077c57600080fd5b60405160c081016001600160401b03811182821017156107ac57634e487b7160e01b600052604160045260246000fd5b80604052508091508235815260208301356020820152604083013560408201526107d86060840161074e565b60608201526107e96080840161074e565b60808201526107fa60a0840161074e565b60a08201525092915050565b803562ffffff8116811461076557600080fd5b6000806000610100848603121561082f57600080fd5b610839858561076a565b925061084760c0850161074e565b915061085560e08501610806565b90509250925092565b801515811461086c57600080fd5b50565b600080600083850361014081121561088657600080fd5b610890868661076a565b9350606060bf19820112156108a457600080fd5b50604051606081016001600160401b03811182821017156108d557634e487b7160e01b600052604160045260246000fd5b6040526108e460c0860161074e565b81526108f260e0860161074e565b60208201526109046101008601610806565b6040820152915061012084013561091a8161085e565b809150509250925092565b6001600160601b0319606096871b811682526001600160e81b031960e896871b8116601484015294871b811660178301529290941b909216602b840152921b909116602e82015260420190565b60005b8381101561098d578181015183820152602001610975565b8381111561055d5750506000910152565b600081518084526109b6816020860160208601610972565b601f01601f19169290920160200192915050565b6040815260006109dd604083018561099e565b90508260208301529392505050565b6000602082840312156109fe57600080fd5b5051919050565b6001600160a01b0391909116815260200190565b602081526000825160a06020840152610a3560c084018261099e565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a9957610a99610a71565b500390565b60008219821115610ab157610ab1610a71565b500190565b600060208284031215610ac857600080fd5b81516101438161085e565b60008251610ae5818460208701610972565b9190910192915050565b602081526000610143602083018461099e56fea26469706673582212206b337b6d3644ce23932cbbe74f60ecabe179e39eada701a2b8b89bf8990511f864736f6c634300080b0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80634e424de21461004557806353d7d4cd14610077575b600080fd5b81801561005157600080fd5b50610065610060366004610819565b610097565b60405190815260200160405180910390f35b81801561008357600080fd5b5061006561009236600461086f565b61014a565b6000826001600160a01b031663cdca17538560800151848760600151868960a001516040516020016100cd959493929190610925565b60408051601f198184030181529082905287516001600160e01b031960e085901b1683526100fd926004016109ca565b6020604051808303816000875af115801561011c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014091906109ec565b90505b9392505050565b81518351608085015160009261016b926001600160a01b0390921691610489565b600083602001516001600160a01b031663cdca175386608001518660400151886060015188604001518a60a001516040516020016101ad959493929190610925565b60408051601f198184030181529082905288516001600160e01b031960e085901b1683526101dd926004016109ca565b6020604051808303816000875af11580156101fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022091906109ec565b905060008560a001516001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016102549190610a05565b602060405180830381865afa158015610271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029591906109ec565b90508380156102a45750818110155b80156102b4575085604001518210155b156102c157509050610143565b6040805160a0808201835260808901519288015160608a0151918a015160009484936102f4939192829060c08701610925565b6040516020818303038152906040528152602001306001600160a01b0316815260200188602001518152602001886000015181526020018860400151815250905085600001516001600160a01b031663c04b8d59826040518263ffffffff1660e01b81526004016103659190610a19565b6020604051808303816000875af1158015610384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a891906109ec565b5060a08701516040516370a0823160e01b81526000916001600160a01b0316906370a08231906103dc903090600401610a05565b602060405180830381865afa1580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d91906109ec565b604089015190915061042f8483610a87565b10156104735760405162461bcd60e51b815260206004820152600e60248201526d4f7665722f756e646572666c6f7760901b60448201526064015b60405180910390fd5b61047d8382610a87565b98975050505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156104da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fe91906109ec565b6105089190610a9e565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905290915061055d908590610563565b50505050565b60006105b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661063a9092919063ffffffff16565b80519091501561063557808060200190518101906105d69190610ab6565b6106355760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161046a565b505050565b60606101408484600085856001600160a01b0385163b61069c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161046a565b600080866001600160a01b031685876040516106b89190610ad3565b60006040518083038185875af1925050503d80600081146106f5576040519150601f19603f3d011682016040523d82523d6000602084013e6106fa565b606091505b509150915061070a828286610715565b979650505050505050565b60608315610724575081610143565b8251156107345782518084602001fd5b8160405162461bcd60e51b815260040161046a9190610aef565b80356001600160a01b038116811461076557600080fd5b919050565b600060c0828403121561077c57600080fd5b60405160c081016001600160401b03811182821017156107ac57634e487b7160e01b600052604160045260246000fd5b80604052508091508235815260208301356020820152604083013560408201526107d86060840161074e565b60608201526107e96080840161074e565b60808201526107fa60a0840161074e565b60a08201525092915050565b803562ffffff8116811461076557600080fd5b6000806000610100848603121561082f57600080fd5b610839858561076a565b925061084760c0850161074e565b915061085560e08501610806565b90509250925092565b801515811461086c57600080fd5b50565b600080600083850361014081121561088657600080fd5b610890868661076a565b9350606060bf19820112156108a457600080fd5b50604051606081016001600160401b03811182821017156108d557634e487b7160e01b600052604160045260246000fd5b6040526108e460c0860161074e565b81526108f260e0860161074e565b60208201526109046101008601610806565b6040820152915061012084013561091a8161085e565b809150509250925092565b6001600160601b0319606096871b811682526001600160e81b031960e896871b8116601484015294871b811660178301529290941b909216602b840152921b909116602e82015260420190565b60005b8381101561098d578181015183820152602001610975565b8381111561055d5750506000910152565b600081518084526109b6816020860160208601610972565b601f01601f19169290920160200192915050565b6040815260006109dd604083018561099e565b90508260208301529392505050565b6000602082840312156109fe57600080fd5b5051919050565b6001600160a01b0391909116815260200190565b602081526000825160a06020840152610a3560c084018261099e565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a9957610a99610a71565b500390565b60008219821115610ab157610ab1610a71565b500190565b600060208284031215610ac857600080fd5b81516101438161085e565b60008251610ae5818460208701610972565b9190910192915050565b602081526000610143602083018461099e56fea26469706673582212206b337b6d3644ce23932cbbe74f60ecabe179e39eada701a2b8b89bf8990511f864736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "amountOutMultiSwap(Swap.SwapInOut,address,uint24)": {
        "params": {
          "_poolFee": "Current uniswap pool fee set in router e.g 3000",
          "_swap": "Number of tokens to sell, token to sell, token to receive",
          "_uniswapQuoter": "Address of uniswapQuoter"
        },
        "returns": {
          "_0": "amountOutMin minimum amount out of tokens to receive when executing swap"
        }
      },
      "swapTokensMulti(Swap.SwapInOut,IController.UniswapParams,bool)": {
        "params": {
          "_swap": "Number of tokens to sell, token to sell, token to receive",
          "_uniswap": "Address of uniswapRouter, uniswapQuoter and poolfee"
        },
        "returns": {
          "_0": "Amountout Number of tokens received"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "amountOutMultiSwap(Swap.SwapInOut,address,uint24)": {
        "notice": "Swap tokens on Uniswap Multi route"
      },
      "swapTokensMulti(Swap.SwapInOut,IController.UniswapParams,bool)": {
        "notice": "Swap tokens on Uniswap"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}